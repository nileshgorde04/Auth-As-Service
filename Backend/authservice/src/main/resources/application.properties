# JWT Secret
jwt.secret=your_generated_256_bit_key

# OAuth2 Google
spring.security.oauth2.client.registration.google.client-id=329601168592-e93jjlrobqeapmflqs40qftl3lqi0d13.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=email,profile

# OAuth2 GitHub
spring.security.oauth2.client.registration.github.client-id=Ov23lin3sHBs3VE2vUYy
spring.security.oauth2.client.registration.github.client-secret=e6054202751a0d157b5c68542332d278638c8723
spring.security.oauth2.client.registration.github.scope=user:email,read:user

# OAuth2 Redirect
oauth2.authorized-redirect-uri=http://localhost:3000/oauth2/redirect

# JWT Token Expiration
jwt.access-token.expiration=900000
jwt.refresh-token.expiration=604800000

# Database
spring.datasource.url=jdbc:postgresql://localhost:5432/authservice
spring.datasource.username=postgres
spring.datasource.password=Nils@2004
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=true

# CORS
cors.allowed-origins=http://localhost:3000
cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
cors.allowed-headers=Authorization,Content-Type
cors.max-age=3600

# Logging
logging.level.org.springframework.security=DEBUG
logging.level.com.nilesh.authservice=DEBUG

# Server
server.port=8080
